{"version":3,"file":"admin.common.js","sources":["../../src/admin/utility/IPAddress.js","../../src/admin/common.js"],"sourcesContent":["/* The code you provided is an Immediately Invoked Function Expression (IIFE) in JavaScript. Here's a\nbreakdown of what it does: */\n(() => {\n    \n    /**\n     * The `loadClientInformation` function fetches and caches IP data, emitting a custom event with\n     * the data when loaded.\n     * @returns The `loadClientInformation` function returns the IP data fetched from the API or\n     * retrieved from the cache. If the fetch request is successful and valid data is received, it\n     * returns the data object. If there is an error during the process, it sets `window.formychat_ip`\n     * to `null` and returns `null`.\n     */\n    const loadClientInformation = async () => {\n        const CACHE_KEY = 'formychat_ip_data';\n        const DAY = 24 * 60 * 60 * 1000;\n\n        const emitLoaded = (data) => {\n            delete data.success;\n            window.formychat_ip = data;\n            window.dispatchEvent(new CustomEvent('formychat_ip_loaded', {\n                detail: data /* The comment `// The API response is directly passed as detail` is\n                explaining that the API response data received from the fetch request\n                is directly passed as the `detail` property of the CustomEvent that is\n                dispatched when the IP data is loaded. This allows other parts of the\n                code to access the specific IP data easily by accessing the `detail`\n                property of the event object when handling the `formychat_ip_loaded`\n                event. */\n            }));\n        };\n\n        try {\n            // Check cache\n            const cached = localStorage.getItem(CACHE_KEY);\n            if (cached) {\n                const { timestamp, data } = JSON.parse(cached);\n                if (Date.now() - timestamp < DAY) {\n                    emitLoaded(data);\n                    return data;\n                }\n            }\n\n            // Fetch new\n            const res = await fetch(\"https://ipwhois.app/json/\");\n            if (!res.ok) throw new Error('Failed to fetch IP data');\n\n            const data = await res.json();\n            if (!data || typeof data !== 'object') throw new Error('Invalid IP data');\n\n            localStorage.setItem(CACHE_KEY, JSON.stringify({\n                timestamp: Date.now(),\n                data\n            }));\n\n            emitLoaded(data);\n            return data;\n\n        } catch (error) {\n            window.formychat_ip = null;\n            return null;\n        }\n    }\n\n    document.addEventListener('DOMContentLoaded', loadClientInformation);\n\n   /* The code snippet `window.addEventListener('formychat_ip_loaded', (e) => {\n       window.formychat_country_code = e.detail?.country_phone?.replace('+', '') || '44'\n   });` is adding an event listener to the `window` object. Specifically, it is listening for a\n   custom event named `'formychat_ip_loaded'`. */\n    window.addEventListener('formychat_ip_loaded', (e) => {\n        window.formychat_country_code = e.detail?.country_phone?.replace('+', '') || '44'\n    });\n})()","import './utility/IPAddress'\n\nwindow.initFormyChatDropDown = () => {\n\n    const target = document.querySelector('.formychat-dropdown')\n    if (!target) return\n\n    /* These lines of code are selecting specific elements within the `.formychat-dropdown` element.\n    Here is what each line is doing: */\n    const placeholder = target.querySelector('.formychat-dropdown-placeholder')\n    const search = target.querySelector('.formychat-dropdown-content-search')\n    const input = target.querySelector('.formychat-dropdown-input')\n\n    /**\n     * The `registerEvents` function in JavaScript sets up event listeners for click, keyup, and custom\n     * events to handle interactions with a dropdown component.\n     */\n    const registerEvents = () => {\n\n        // On Click \n        document.addEventListener('click', (e) => {\n            if (!e.target.closest('.formychat-dropdown')) {\n                return close()\n            }\n\n            // on clicked placeholder.\n            if (e.target.closest('.formychat-dropdown-placeholder')) {\n                return toggle(e)\n            }\n\n            // on clicked item\n            if (e.target.closest('.formychat-dropdown-content-item') || e.target.classList.contains('formychat-dropdown-content-item')) {\n                return choose(e)\n            }\n        })\n        // Keypress.\n        document.addEventListener('keyup', (e) => {\n            // Ba if target not match the dropdown, return.\n            if (!e.target.closest('.formychat-dropdown')) return\n\n            // On search input\n            if (e.target.closest('.formychat-dropdown-content-search')) {\n                // console.log('search', e.target.value.toLowerCase().trim());\n                update(e.target.value.toLowerCase().trim())\n                return\n            }\n\n            // ESC key\n            if (e.key === 'Escape') {\n                close()\n                return\n            }\n        })\n\n        // Choose default item.\n        const defaultItem = target.querySelector('.formychat-dropdown-content-item.selected')\n        if (defaultItem) {\n            choose({ target: defaultItem })\n        }\n\n        // formychat_ip_loaded.\n        window.addEventListener('formychat_ip_loaded', (e) => {\n            console.log('formychat_ip_loaded', e.detail);\n        })\n\n    }\n\n    window.addEventListener('DOMContentLoaded', registerEvents)\n\n    // toggle the dropdown.\n    const toggle = (e) => {\n        e.preventDefault()\n        if (target.classList.contains('open')) {\n            return close()\n        }\n        open()\n    }\n\n\n    /**\n     * The `open` function adds the 'active' class to a target element, focuses on a search input, and\n     * scrolls to a selected item within the target element if it exists.\n     */\n    const open = () => {\n        target.classList.add('active')\n\n        // Focus on search input.\n        search.focus()\n\n        // Scroll to selected item.\n        const selected = target.querySelector('.formychat-dropdown-content-item.selected')\n        if (selected) {\n            selected.scrollIntoView({ behavior: 'smooth', block: 'center' })\n        }\n    }\n\n\n    /**\n     * The function `close` removes the 'active' class from the target element.\n     */\n    const close = () => {\n        target.classList.remove('active')\n    }\n\n    // Choose the item.\n    /**\n     * The `choose` function selects an item from a dropdown menu, updates placeholder text, hidden\n     * input value, resets search, and closes the dropdown.\n     * @param e - The `e` parameter in the `choose` function is typically an event object that\n     * represents the event that triggered the function. It could be a click event, keypress event,\n     * etc. This parameter is used to access information about the event, such as the target element\n     * that was clicked or interacted\n     */\n    const choose = (e) => {\n        // Unselect all items\n        const items = target.querySelectorAll('.formychat-dropdown-content-item')\n        items.forEach(i => {\n            i.classList.remove('selected')\n        })\n\n        // Select clicked item\n        e.target.classList.add('selected')\n\n        // Update placeholder\n        if (placeholder) {\n            placeholder.querySelector('span').textContent = e.target.dataset.placeholder\n        }\n\n        // Update hidden input value\n        input.value = e.target.dataset.value\n\n        // Reset search.\n        search.value = ''\n        update()\n        close()\n    }\n\n    // Update the items.\n    /**\n     * The `update` function filters and displays elements based on a search string.\n     * @param [s] - The `s` parameter in the `update` function is a string that is used to filter the\n     * items displayed on the webpage. The function iterates over a list of items with the class name\n     * `.formychat-dropdown-content-item` and checks if the `dataset.tags` attribute of each item\n     * includes\n     */\n    const update = (s = '') => {\n        const items = target.querySelectorAll('.formychat-dropdown-content-item')\n        items.forEach(i => {\n\n            let display = !s || s.length === 0\n\n            if (s && s.length) {\n                display = s.length === 0 || i.dataset.tags.toLowerCase().includes(s)\n            }\n\n            i.style.display = display ? 'block' : 'none'\n        })\n    }\n\n    // If the value is empty, set window.formychat_country_code.\n    if (!input.value || input.value.length === 0) {\n        console.log('input.value is empty');\n        // Wait for country code to be available\n        if (window.formychat_country_code) {\n            // Find item with matching country code\n            const items = target.querySelectorAll('.formychat-dropdown-content-item');\n            const defaultItem = Array.from(items).find(item =>\n                item.dataset.value === window.formychat_country_code\n            );\n\n            // If found matching item, select it\n            if (defaultItem) {\n                /* The line `choose({ target: defaultItem });` is calling the `choose` function with an\n                object as an argument. The `target` property of the object is set to the\n                `defaultItem` element. */\n                choose({ target: defaultItem });\n            }\n        } else {\n            // Listen for country code event if not yet available\n            window.addEventListener('formychat_ip_loaded', (e) => {\n                const countryCode = e.detail?.country_phone?.replace('+', '') || '44';\n                const items = target.querySelectorAll('.formychat-dropdown-content-item');\n                const defaultItem = Array.from(items).find(item =>\n                    item.dataset.value === countryCode\n                );\n\n                if (defaultItem) {\n                    choose({ target: defaultItem });\n                }\n            });\n        }\n    } else {\n        let item = target.querySelector('.formychat-dropdown-content-item[data-value=\"' + input.value + '\"]')\n        if (item) {\n            choose({ target: item })\n        }\n    }\n\n    // Trigger the event.\n    window.dispatchEvent(new Event('formychat_dropdown_initialized'))\n    \n\n}\n\ndocument.addEventListener('DOMContentLoaded', initFormyChatDropDown)\n \n// Contact Form 7 Routing.\nconst contactForm7Routing = () => {\n    // If the page is a CF7 page (?page=wpcf7), and #formychat is in the url, then redirect to the formychat page.\n    if (window.location.href.includes('page=wpcf7') && window.location.hash === '#formychat') {\n        // Find #formychat-tab and click.\n        const formychat = document.querySelector('#formychat-tab')\n        if (formychat) {\n            console.log('formychat', formychat);\n            formychat.click()\n        }\n    }\n}\ndocument.addEventListener('DOMContentLoaded', contactForm7Routing)"],"names":["loadClientInformation","CACHE_KEY","emitLoaded","data","cached","timestamp","res","e","_b","_a","target","placeholder","search","input","registerEvents","close","toggle","choose","update","defaultItem","open","selected","i","s","display","items","item","countryCode","contactForm7Routing","formychat"],"mappings":"0BAEC,IAAM,CAUH,MAAMA,EAAwB,SAAY,CACtC,MAAMC,EAAY,oBAGZC,EAAcC,GAAS,CACzB,OAAOA,EAAK,QACZ,OAAO,aAAeA,EACtB,OAAO,cAAc,IAAI,YAAY,sBAAuB,CACxD,OAAQA,CAOX,CAAA,CAAC,CACd,EAEQ,GAAI,CAEA,MAAMC,EAAS,aAAa,QAAQH,CAAS,EAC7C,GAAIG,EAAQ,CACR,KAAM,CAAE,UAAAC,EAAW,KAAAF,CAAI,EAAK,KAAK,MAAMC,CAAM,EAC7C,GAAI,KAAK,MAAQC,EAAY,MACzB,OAAAH,EAAWC,CAAI,EACRA,CAEd,CAGD,MAAMG,EAAM,MAAM,MAAM,2BAA2B,EACnD,GAAI,CAACA,EAAI,GAAI,MAAM,IAAI,MAAM,yBAAyB,EAEtD,MAAMH,EAAO,MAAMG,EAAI,OACvB,GAAI,CAACH,GAAQ,OAAOA,GAAS,SAAU,MAAM,IAAI,MAAM,iBAAiB,EAExE,oBAAa,QAAQF,EAAW,KAAK,UAAU,CAC3C,UAAW,KAAK,IAAK,EACrB,KAAAE,CACH,CAAA,CAAC,EAEFD,EAAWC,CAAI,EACRA,CAEV,MAAe,CACZ,cAAO,aAAe,KACf,IACV,CACJ,EAED,SAAS,iBAAiB,mBAAoBH,CAAqB,EAMnE,OAAO,iBAAiB,sBAAwBO,GAAM,SAClD,OAAO,yBAAyBC,GAAAC,EAAAF,EAAE,SAAF,YAAAE,EAAU,gBAAV,YAAAD,EAAyB,QAAQ,IAAK,MAAO,IACrF,CAAK,CACL,GAAC,ECrED,OAAO,sBAAwB,IAAM,CAEjC,MAAME,EAAS,SAAS,cAAc,qBAAqB,EAC3D,GAAI,CAACA,EAAQ,OAIb,MAAMC,EAAcD,EAAO,cAAc,iCAAiC,EACpEE,EAASF,EAAO,cAAc,oCAAoC,EAClEG,EAAQH,EAAO,cAAc,2BAA2B,EAMxDI,EAAiB,IAAM,CAGzB,SAAS,iBAAiB,QAAUP,GAAM,CACtC,GAAI,CAACA,EAAE,OAAO,QAAQ,qBAAqB,EACvC,OAAOQ,EAAO,EAIlB,GAAIR,EAAE,OAAO,QAAQ,iCAAiC,EAClD,OAAOS,EAAOT,CAAC,EAInB,GAAIA,EAAE,OAAO,QAAQ,kCAAkC,GAAKA,EAAE,OAAO,UAAU,SAAS,iCAAiC,EACrH,OAAOU,EAAOV,CAAC,CAE/B,CAAS,EAED,SAAS,iBAAiB,QAAUA,GAAM,CAEtC,GAAKA,EAAE,OAAO,QAAQ,qBAAqB,EAG3C,IAAIA,EAAE,OAAO,QAAQ,oCAAoC,EAAG,CAExDW,EAAOX,EAAE,OAAO,MAAM,YAAW,EAAG,MAAM,EAC1C,MACH,CAGD,GAAIA,EAAE,MAAQ,SAAU,CACpBQ,EAAO,EACP,MACH,EACb,CAAS,EAGD,MAAMI,EAAcT,EAAO,cAAc,2CAA2C,EAChFS,GACAF,EAAO,CAAE,OAAQE,EAAa,EAIlC,OAAO,iBAAiB,sBAAwBZ,GAAM,CAClD,QAAQ,IAAI,sBAAuBA,EAAE,MAAM,CACvD,CAAS,CAEJ,EAED,OAAO,iBAAiB,mBAAoBO,CAAc,EAG1D,MAAME,EAAUT,GAAM,CAElB,GADAA,EAAE,eAAgB,EACdG,EAAO,UAAU,SAAS,MAAM,EAChC,OAAOK,EAAO,EAElBK,EAAM,CACT,EAOKA,EAAO,IAAM,CACfV,EAAO,UAAU,IAAI,QAAQ,EAG7BE,EAAO,MAAO,EAGd,MAAMS,EAAWX,EAAO,cAAc,2CAA2C,EAC7EW,GACAA,EAAS,eAAe,CAAE,SAAU,SAAU,MAAO,SAAU,CAEtE,EAMKN,EAAQ,IAAM,CAChBL,EAAO,UAAU,OAAO,QAAQ,CACnC,EAWKO,EAAUV,GAAM,CAEJG,EAAO,iBAAiB,kCAAkC,EAClE,QAAQY,GAAK,CACfA,EAAE,UAAU,OAAO,UAAU,CACzC,CAAS,EAGDf,EAAE,OAAO,UAAU,IAAI,UAAU,EAG7BI,IACAA,EAAY,cAAc,MAAM,EAAE,YAAcJ,EAAE,OAAO,QAAQ,aAIrEM,EAAM,MAAQN,EAAE,OAAO,QAAQ,MAG/BK,EAAO,MAAQ,GACfM,EAAQ,EACRH,EAAO,CACV,EAUKG,EAAS,CAACK,EAAI,KAAO,CACTb,EAAO,iBAAiB,kCAAkC,EAClE,QAAQY,GAAK,CAEf,IAAIE,EAAU,CAACD,GAAKA,EAAE,SAAW,EAE7BA,GAAKA,EAAE,SACPC,EAAUD,EAAE,SAAW,GAAKD,EAAE,QAAQ,KAAK,YAAW,EAAG,SAASC,CAAC,GAGvED,EAAE,MAAM,QAAUE,EAAU,QAAU,MAClD,CAAS,CACJ,EAGD,GAAI,CAACX,EAAM,OAASA,EAAM,MAAM,SAAW,EAGvC,GAFA,QAAQ,IAAI,sBAAsB,EAE9B,OAAO,uBAAwB,CAE/B,MAAMY,EAAQf,EAAO,iBAAiB,kCAAkC,EAClES,EAAc,MAAM,KAAKM,CAAK,EAAE,KAAKC,GACvCA,EAAK,QAAQ,QAAU,OAAO,sBAC9C,EAGgBP,GAIAF,EAAO,CAAE,OAAQE,CAAW,CAAE,CAE9C,MAEY,OAAO,iBAAiB,sBAAwBZ,GAAM,SAClD,MAAMoB,IAAcnB,GAAAC,EAAAF,EAAE,SAAF,YAAAE,EAAU,gBAAV,YAAAD,EAAyB,QAAQ,IAAK,MAAO,KAC3DiB,EAAQf,EAAO,iBAAiB,kCAAkC,EAClES,EAAc,MAAM,KAAKM,CAAK,EAAE,KAAKC,GACvCA,EAAK,QAAQ,QAAUC,CAC3C,EAEoBR,GACAF,EAAO,CAAE,OAAQE,CAAW,CAAE,CAElD,CAAa,MAEF,CACH,IAAIO,EAAOhB,EAAO,cAAc,gDAAkDG,EAAM,MAAQ,IAAI,EAChGa,GACAT,EAAO,CAAE,OAAQS,EAAM,CAE9B,CAGD,OAAO,cAAc,IAAI,MAAM,gCAAgC,CAAC,CAGpE,EAEA,SAAS,iBAAiB,mBAAoB,qBAAqB,EAGnE,MAAME,EAAsB,IAAM,CAE9B,GAAI,OAAO,SAAS,KAAK,SAAS,YAAY,GAAK,OAAO,SAAS,OAAS,aAAc,CAEtF,MAAMC,EAAY,SAAS,cAAc,gBAAgB,EACrDA,IACA,QAAQ,IAAI,YAAaA,CAAS,EAClCA,EAAU,MAAO,EAExB,CACL,EACA,SAAS,iBAAiB,mBAAoBD,CAAmB"}